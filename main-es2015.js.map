{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/enumerations/musculeGroup.ts","./src/app/exercise-details/exercise-detail/exercise-detail.component.ts","./src/app/exercise-details/exercise-detail/exercise-detail.component.html","./src/app/exercise-details/exercise-details.component.ts","./src/app/exercise-details/exercise-details.component.html","./src/app/exercise-details/exercise-list/exercise-list.component.ts","./src/app/exercise-details/exercise-list/exercise-list.component.html","./src/app/exercise-details/exercise-view/exercise-view.component.ts","./src/app/exercise-details/exercise-view/exercise-view.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/projects/project/project.component.ts","./src/app/projects/project/project.component.html","./src/app/projects/projects-list/projects-list.component.ts","./src/app/projects/projects-list/projects-list.component.html","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html","./src/app/shared/custome-pipes/order-by-index.pipe.ts","./src/app/shared/exercise-detail.service.ts","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/project.service.ts","./src/app/shared/user.service.ts","./src/app/shared/workout-detail.service.ts","./src/app/user/login-form/login-form.component.ts","./src/app/user/login-form/login-form.component.html","./src/app/user/registration-form/registration-form.component.ts","./src/app/user/registration-form/registration-form.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/workout-details/addexer-list/addexer-list.component.ts","./src/app/workout-details/addexer-list/addexer-list.component.html","./src/app/workout-details/workout-detail/workout-detail.component.ts","./src/app/workout-details/workout-detail/workout-detail.component.html","./src/app/workout-details/workout-details.component.ts","./src/app/workout-details/workout-details.component.html","./src/app/workout-details/workout-edit/workout-edit.component.ts","./src/app/workout-details/workout-edit/workout-edit.component.html","./src/app/workout-details/workout-list/workout-list.component.ts","./src/app/workout-details/workout-list/workout-list.component.html","./src/app/workout-details/workout-view/workout-view.component.ts","./src/app/workout-details/workout-view/workout-view.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TaskerFront';\n}\n","<div>\n  <navbar></navbar>\n  <div class=\"jumbotron\">\n    <router-outlet></router-outlet>\n  </div>\n</div>","import { ProjectsListComponent } from './projects/projects-list/projects-list.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ProjectComponent } from './projects/project/project.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { RouterModule } from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { ExerciseDetailsComponent } from './exercise-details/exercise-details.component';\nimport { ExerciseDetailComponent } from './exercise-details/exercise-detail/exercise-detail.component';\nimport { ExerciseListComponent } from './exercise-details/exercise-list/exercise-list.component';\nimport { ExerciseDetailService } from './shared/exercise-detail.service';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { WorkoutDetailsComponent } from './workout-details/workout-details.component';\nimport { WorkoutDetailComponent } from './workout-details/workout-detail/workout-detail.component';\nimport { WorkoutListComponent } from './workout-details/workout-list/workout-list.component';\nimport { AddexerListComponent } from './workout-details/addexer-list/addexer-list.component';\nimport { CommonModule } from '@angular/common';\nimport { WorkoutViewComponent } from './workout-details/workout-view/workout-view.component';\nimport { ExerciseViewComponent } from './exercise-details/exercise-view/exercise-view.component';\nimport { OrderByIndexPipe } from './shared/custome-pipes/order-by-index.pipe';\nimport { RegistrationFormComponent } from './user/registration-form/registration-form.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginFormComponent } from './user/login-form/login-form.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { WorkoutEditComponent } from './workout-details/workout-edit/workout-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExerciseDetailsComponent,\n    ExerciseDetailComponent,\n    ExerciseListComponent,\n    NavbarComponent,\n    WorkoutDetailsComponent,\n    WorkoutDetailComponent,\n    WorkoutListComponent,\n    AddexerListComponent,\n    WorkoutViewComponent,\n    ExerciseViewComponent,\n    OrderByIndexPipe,\n    RegistrationFormComponent,\n    UserComponent,\n    LoginFormComponent,\n    HomeComponent,\n    ProjectComponent,\n    ProjectsComponent,\n    ProjectsListComponent,\n    WorkoutEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forRoot([\n      {path: 'user', component: UserComponent, children: [\n        {path: 'registration', component: RegistrationFormComponent},\n        {path: 'login', component: LoginFormComponent}\n      ]},\n      {path: 'workouts/edit/:id', component: WorkoutEditComponent},\n      {path: 'workouts/:id', component: WorkoutViewComponent},\n      {path: 'home', component: HomeComponent, canActivate:[AuthGuard]},\n      {path: 'exercises', component: ExerciseDetailsComponent, canActivate:[AuthGuard]},\n      {path: 'workouts', component: WorkoutDetailsComponent, canActivate:[AuthGuard]},\n      {path: 'projects', component: ProjectsComponent, canActivate:[AuthGuard]},\n      {path: '', redirectTo: 'user/login', pathMatch: 'full'},\n      {path: '**', redirectTo: 'exercises', pathMatch: 'full'},\n    ])\n  ],\n  providers: [\n    ExerciseDetailService,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private router: Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('token'))\n        return true;\n      else {\n        this.router.navigate(['/user/login'])\n        return false;\n      }\n  }\n  \n}\n","import { Router } from '@angular/router';\r\n//Sitas naudojamas tam, kad nereiktu su kiekvienu \r\n//requestu siusti tokeno\r\n\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n    constructor(private router: Router) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if(localStorage.getItem('token')){\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer '+localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ => {},\r\n                    err => {\r\n                        if(err.status == 401)\r\n                        localStorage.removeItem('token')\r\n                        this.router.navigateByUrl('/user/login')//galima dar ir toteri idet, kad erroras\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else\r\n            return next.handle(req.clone());\r\n    }\r\n\r\n}","export enum MusculeGroup{\r\n    Legs = 0,\r\n    Chest,\r\n    Back,\r\n    Biceps,\r\n    Triceps,\r\n    Abs,\r\n    Cardio,\r\n\tSoulders\r\n}\r\n\r\nexport namespace MusculeGroup {\r\n\r\n    export function values() {\r\n      return Object.keys(MusculeGroup).filter(\r\n        (type) => isNaN(<any>type) && type !== 'values'\r\n      );\r\n    }\r\n  }","import { MusculeGroup } from './../../enumerations/musculeGroup';\nimport { ExerciseDetailService } from './../../shared/exercise-detail.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'exercise-detail',\n  templateUrl: './exercise-detail.component.html',\n  styleUrls: ['./exercise-detail.component.css']\n})\nexport class ExerciseDetailComponent implements OnInit {\n  groups = MusculeGroup;\n\n  constructor(private service: ExerciseDetailService,\n    private toastr: ToastrService) {\n    }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  get getService(){\n    return this.service;\n  }\n\n  resetForm(form?:NgForm){\n    if(form) form.resetForm()\n    this.service.formData = {\n      ExerciseId: 0,\n      MusculeGroup: null,\n      Name: \"\",\n      VideoUrl: null\n    }\n  }\n\n  onSubmit(form:NgForm){\n    if(this.service.formData.ExerciseId==0) this.insert(form)\n    else this.update(form)\n  }\n\n  update(form:NgForm){\n    this.service.put().subscribe(\n      res => {\n        this.resetForm(form)\n        this.toastr.info('Exercise Updated successfully')\n        this.service.refreshList()\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n  insert(form:NgForm){\n    this.service.post().subscribe(\n      res => {\n        this.resetForm(form)\n        this.toastr.success('Exercise submitted successfully')\n        this.service.refreshList()\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"ExerciseId\" #ExerciseId=\"ngModel\" [ngModel]=\"getService.formData.ExerciseId\">\n    <div class=\"form-group\">\n        <label for=\"group\">Muscule Group</label>\n        <select id=\"group\" class=\"form-control\" name=\"musculeGroup\" #musculeGroup=\"ngModel\" \n        [(ngModel)]=\"getService.formData.MusculeGroup\" required>\n            <option value=\"\"></option>\n            <option *ngFor=\"let group of groups.values() ; index as i \" [ngValue]=\"i\" >{{group}}</option>\n        </select>\n        <div *ngIf=\"musculeGroup.touched && !musculeGroup.valid\" class=\"alert alert-danger\">Please specify the targeted muscule group</div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <input class=\"form-control\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"getService.formData.Name\"\n            placeholder=\"Enter the name of the exercise\" maxlength=\"50\" required>\n        </div>\n        <div *ngIf=\"name.touched && !name.valid\" class=\"alert alert-danger\">Please specify the name of exercise</div>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"VideoUrl\" #VideoUrl=\"ngModel\" [(ngModel)]=\"getService.formData.VideoUrl\" \n        class=\"form-control\" placeholder=\"Add the URL of the exercise video\" maxLength=\"500\">\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-lg btn-block btn-info \" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'exercise-details',\n  templateUrl: './exercise-details.component.html',\n  styleUrls: ['./exercise-details.component.css']\n})\nexport class ExerciseDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h1 class=\"display-4 text-center\">New Exercise Register</h1>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <exercise-detail></exercise-detail>\n        </div>\n        <div class=\"col-md-7\">\n            <exercise-list></exercise-list>\n        </div>\n    </div>\n</div>\n","import { MusculeGroup } from './../../enumerations/musculeGroup';\nimport { ExerciseDetail } from './../../shared/models/exercise-detail.model';\nimport { ExerciseDetailService } from './../../shared/exercise-detail.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'exercise-list',\n  templateUrl: './exercise-list.component.html',\n  styleUrls: ['./exercise-list.component.css']\n})\nexport class ExerciseListComponent implements OnInit {\n  groups=MusculeGroup;\n  constructor(private service: ExerciseDetailService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  get Exercises(): ExerciseDetail[] {\n    return this.service.list\n  }\n\n  populateForm(exercise: ExerciseDetail){\n    this.service.formData = Object.assign({}, exercise)\n  }\n\n  onDelete(id:number){\n    this.service.delete(id).subscribe(\n      res => {\n        this.toastr.warning('Exercise Deleted successfully')\n        this.service.refreshList()\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n}\n","<table class=\"table table-hover\">\n    <thead>\n        <tr>\n            <th>Title</th>\n            <th>Muscule Group</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let exer of Exercises\">\n            <td scope=\"row\" (click)=\"populateForm(exer)\">{{exer.Name}}</td>\n            <td scope=\"row\">{{groups[exer.MusculeGroup]}}</td>\n            <td><button class=\"btn btn-danger btn-sm\" (click)=\"onDelete(exer.ExerciseId)\">Delete</button></td>\n        </tr>       \n    </tbody>\n</table>","import { ExerciseDetailService } from 'src/app/shared/exercise-detail.service';\nimport { WorkoutExercise } from './../../shared/models/workout-detail.model';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ExerciseDetail } from 'src/app/shared/models/exercise-detail.model';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'exercise-view',\n  templateUrl: './exercise-view.component.html',\n  styleUrls: ['./exercise-view.component.css']\n})\nexport class ExerciseViewComponent implements OnInit {\n  @Input() exercise: WorkoutExercise;\n  @Input() index: number;\n\n  safeUrl: any\n  isShowDiv = true;\n\n  constructor(private sanitizer: DomSanitizer) {\n    \n  }\n\n  ngOnInit(): void {\n    if(this.exercise.VideoUrl){\n      if(this.exercise.VideoUrl.indexOf('youtube.com/watch?v=')>0)\n      this.exercise.VideoUrl = this.exercise.VideoUrl.replace('youtube.com/watch?v=', 'youtube.com/embed/');\n      this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.exercise.VideoUrl);\n    }\n  }\n\n  toggleDisplayDiv() {\n    this.isShowDiv = !this.isShowDiv;\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{index + 1}} {{exercise.Name}}</h5>   \n    <div *ngIf=\"exercise.VideoUrl\">\n      <span (click)=\"toggleDisplayDiv()\" class=\"material-icons\">movie</span>    \n      <div [hidden]=\"isShowDiv\" class=\"embed-responsive embed-responsive-16by9\">\n        <iframe class=\"embed-responsive-item\" [src]='safeUrl' allowfullscreen></iframe>\n      </div>\n    </div>\n    <p class=\"card-text\">{{exercise.Sets}} sets, {{exercise.Reps}} reps</p>\n  </div>\n</div>","import { UserService } from './../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  user: any = {}\n\n  constructor(private servise: UserService) { }\n\n  ngOnInit(): void {\n    this.servise.getUser().subscribe(res => this.user = res)\n  }\n\n}\n","<p>Hello {{user.UserName}}, Welcome to doPlan</p>\n\n","import { ProjectDetail } from './../../shared/models/project-detail.models';\r\nimport { Component, OnInit } from '@angular/core';\r\n// import { Project } from 'src/app/interfaces/project';\r\nimport { NgForm, FormArray } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n  constructor(public service: ProjectService, private toastr: ToastrService) {}\r\n\r\n  ngOnInit() {\r\n    this.service.resetForm();\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.ProjectId==0) this.insert(form)\r\n    else this.update(form)\r\n  }\r\n\r\n  get formData(){\r\n    return this.service.formData;\r\n  }\r\n\r\n  update(form:NgForm){\r\n    console.log(\"reikia updatint\")\r\n    this.service.put().subscribe(\r\n      res => {\r\n        this.service.resetForm(form)\r\n        this.toastr.info('Exercise Updated successfully')\r\n        this.service.get()\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n  insert(form:NgForm){\r\n    this.service.post().subscribe(\r\n      res => {\r\n        this.service.resetForm(form)\r\n        this.toastr.success('Project submitted successfully')\r\n        this.service.get()\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n  <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.ProjectId\">\n  <div class=\"form-group\">\n    <input id=\"title\" name=\"Title\" #Title=\"ngModel\" \n    [(ngModel)]=\"formData.Title\" class=\"form-control\" \n    placeholder=\"Title\" required>\n    <div class=\"alert alert-danger\" *ngIf=\"!Title.valid && Title.touched\">Title is required</div>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"date\" name=\"Date\" class=\"form-control\" #Date=\"ngModel\" [(ngModel)]=\"formData.Date\" required>\n  </div>\n  <div class=\"form-group\">\n    <textarea row=\"3\" id=\"description\" name=\"Description\" #Description=\"ngModel\" \n    [(ngModel)]=\"formData.Description\" class=\"form-control\" \n    placeholder=\"Description (optional)\"></textarea>\n  </div>\n  <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-lg btn-block btn-info \">Submit</button>\n</form>\n\n<p>{{ formData | json}}</p>","import { ToastrService } from 'ngx-toastr';\r\nimport { ProjectDetail } from './../../shared/models/project-detail.models';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { runInThisContext } from 'vm';\r\n\r\n\r\n@Component({\r\n  selector: 'projects-list',\r\n  templateUrl: './projects-list.component.html',\r\n  styleUrls: ['./projects-list.component.css']\r\n})\r\nexport class ProjectsListComponent implements OnInit {\r\n  isTouched: boolean;\r\n\r\n  constructor(private service: ProjectService, private toastr: ToastrService) {\r\n    this.isTouched=false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.get()\r\n    //this.service.sort()\r\n  }\r\n\r\n  get projects() {\r\n    return this.service.list\r\n  }\r\n\r\n  populateForm(project: ProjectDetail){\r\n    this.isTouched = !this.isTouched;\r\n    this.service.edit(project, this.isTouched)\r\n  }\r\n\r\n  onDelete(id:number){\r\n    if (confirm(\"Are you sure?\"))\r\n    this.service.delete(id).subscribe(\r\n      res => {\r\n        this.toastr.warning('Project Deleted successfully')\r\n        this.service.get()\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div *ngFor=\"let project of projects\" class=\"card\" style=\"width: 80%;\">\r\n  <div class=\"card-body\">\r\n    <h5 (click)=\"populateForm(project)\" class=\"card-title\">{{project.Title}}</h5>\r\n    <h6 class=\"card-subtitle mb-2 text-muted\">{{project.Date | date:'fullDate'}}</h6>\r\n    <p *ngIf=\"project.Description\" class=\"card-text\">{{project.Description}}</p>\r\n    <button class=\"btn btn-sm btn-danger\" (click)=\"onDelete(project.ProjectId)\">Delete</button>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div>\r\n  <h1 class=\"display-4 text-center\">New Projects Register</h1>\r\n  <hr>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5\">\r\n      <project></project>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <projects-list></projects-list>\r\n    </div>\r\n  </div>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderByIndex'\n})\nexport class OrderByIndexPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","import { ExerciseDetail } from './models/exercise-detail.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExerciseDetailService {\n  formData: ExerciseDetail;\n  list: ExerciseDetail[];\n  readonly rootUrl = \"https://tasker2.azurewebsites.net/api/Exercises/\"\n\n  constructor(private http: HttpClient) { }\n\n  post(){\n    return this.http.post(this.rootUrl, this.formData)\n  }\n\n  put(){\n    return this.http.put(this.rootUrl + this.formData.ExerciseId, this.formData)\n  }\n\n  delete(id: number){\n    return this.http.delete(this.rootUrl+id)\n  }\n  \n  get(id: number){\n    return this.http.get(this.rootUrl+id)\n  }\n\n  refreshList(){\n    this.http.get(this.rootUrl).toPromise()\n    .then(res => this.list = res as ExerciseDetail[])\n  }\n}\n","import { UserService } from './../user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  constructor(private servise: UserService) { }\n\n  logout(){\n    this.servise.logout();\n  }\n\n  get localStorage(){\n    return localStorage\n  }\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\n    <div class=\"container\">\n        <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarMenu\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarMenu\">\n            <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"/home\"]'>Home<span class=\"sr-only\"></span></a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"/workouts\"]'>Workouts<span class=\"sr-only\"></span></a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"/exercises\"]'>Exercises</a>\n            </li>\n            <li *ngIf=\"!localStorage.getItem('token')\" class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"/user/login\"]'>Login form</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"projects\"]'>Projects</a>\n            </li>\n            </ul>\n            <span *ngIf=\"localStorage.getItem('token')\">\n                <a class=\"btn btn-secondary\" (click)=\"logout()\">Logout</a>\n            </span>\n        </div>\n    </div>\n</nav>","import { ProjectDetail } from './models/project-detail.models';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  formData: ProjectDetail;\r\n  list: ProjectDetail[];\r\n  readonly rootUrl = \"https://tasker2.azurewebsites.net/api/Projects/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  post(){\r\n    return this.http.post(this.rootUrl, this.formData)\r\n  }\r\n\r\n  put(){\r\n    return this.http.put(this.rootUrl + this.formData.ProjectId, this.formData)\r\n  }\r\n\r\n  delete(id: number){\r\n    return this.http.delete(this.rootUrl+id)\r\n  }\r\n\r\n  get(){\r\n    return this.http.get(this.rootUrl).toPromise()\r\n    .then((res: ProjectDetail[]) =>{\r\n      this.list = res\r\n      //this.sort();\r\n    })\r\n  } \r\n\r\n  //populate edit form\r\n  edit(data: ProjectDetail, edit: boolean){\r\n    data.Date = (new Date(data.Date).toISOString().slice(0, 10)) as unknown as Date\r\n    if(edit) this.formData = Object.assign({}, data)\r\n    else this.resetForm();\r\n  }\r\n\r\n  resetForm(form?: NgForm) {\r\n    if(form) form.resetForm();\r\n    this.formData={\r\n      ProjectId: 0,\r\n      Date: null,\r\n      Title: \"\",\r\n      Description: null\r\n    }\r\n  }\r\n\r\n  sort() {\r\n    this.list.sort((a: ProjectDetail, b: ProjectDetail) => {\r\n      return +new Date(a.Date) - +new Date(b.Date)\r\n    })\r\n  }\r\n}","import { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  readonly rootUrl = \"https://tasker2.azurewebsites.net/api/applicationusers/\" //\"https://localhost:5001/api/applicationusers/\"\n  constructor(private http: HttpClient, private router: Router) { }\n\n  register(newUser){\n    return this.http.post(this.rootUrl + 'register', newUser)\n  }\n\n  login(user){\n    return this.http.post(this.rootUrl + \"login\", user)\n  }\n\n  logout(){\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('/home');\n  }\n\n  getUser(){\n    // var tokenHeader = new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('token')});\n    //return this.http.get(\"https://localhost:5001/api/userprofiles\");\n    return this.http.get(\"https://tasker2.azurewebsites.net/api/userprofiles\");\n  }\n}\n","import { ExerciseDetail } from './models/exercise-detail.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { WorkoutDetail, WorkoutExercise } from './models/workout-detail.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { threadId } from 'worker_threads';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkoutDetailService {\n  //default: workoutExercise = { ExerciseId: 0, Name: \"\", Reps: 0, Sets: 0 }\n  readonly rootUrl = \"https://tasker2.azurewebsites.net/api/Workouts/\";\n  exercise = new BehaviorSubject({})\n  currentExercise = this.exercise.asObservable();\n  \n  workout = new BehaviorSubject({})\n  newWorkout = this.workout.asObservable();\n  \n  constructor(private http: HttpClient) { }\n  \n  GetList(){\n    return this.http.get(this.rootUrl);\n  }\n  \n  Add(workout: WorkoutDetail){\n    return this.http.post(this.rootUrl, workout)\n  }\n\n  Update(id, workout: WorkoutDetail){\n    return this.http.put(this.rootUrl + id, workout)\n  }\n  \n  get(id){\n    return this.http.get(this.rootUrl + id);\n  }\n  \n  delete(id: number) {\n    return this.http.delete(this.rootUrl + id);\n  }\n\n  AddExercise(id, name){\n    let exercise: WorkoutExercise = { ExerciseId: id, Name: name, Reps: 0, Sets: 0, Index: 0 }\n    this.exercise.next(exercise)\n  }\n}\n\n\n","import { Router } from '@angular/router';\nimport { UserService } from './../../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n  formModel = {\n    UserName: \"\",\n    Password: \"\"\n  }\n\n  constructor(private servise: UserService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('token')) this.router.navigateByUrl('/home');\n  }\n\n  submit(){\n    console.log(this.formModel)\n    this.servise.login(this.formModel).subscribe((res: any) => {\n      localStorage.setItem('token', res.token);\n      this.router.navigateByUrl('/home')\n    },\n    err => console.log(err)) //dar reiks pridet klaidos pranesima\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (ngSubmit)=\"submit()\">\n    <div class=\"form-group\">\n        <label>User Name</label>\n        <input class=\"form-control\" type=\"text\" id=\"UserName\" name=\"UserName\" \n        #UserName=\"ngModel\" \n        [(ngModel)]=\"formModel.UserName\"\n        required>\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input class=\"form-control\" type=\"password\" id=\"Password\" name=\"Password\" \n        #Password=\"ngModel\" \n        [(ngModel)]=\"formModel.Password\"\n        required>\n    </div>\n    <div class=\"form-row\">\n        <div>\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"form.invalid\">Sign In</button>\n        </div>\n    </div>\n</form>\n","import { UserService } from './../../shared/user.service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.css']\n})\nexport class RegistrationFormComponent implements OnInit {\n  formModel = this.formBuilder.group({\n    UserName: ['', Validators.required],\n    Email: ['', [Validators.required, Validators.email]],\n    FullName: ['', Validators.required],\n    Passwords: this.formBuilder.group({\n      Password: ['', [Validators.required, Validators.minLength(6)]],\n      ConfirmPassword: ['', Validators.required]\n    }, {validator: this.ComparePasswords})})\n\n    errors: string[] = []\n\n  constructor(private formBuilder: FormBuilder,\n    private servise: UserService) { }\n\n  ngOnInit(): void {\n    this.formModel.reset()\n  }\n\n  get UserName(){\n    return this.formModel.get('UserName')\n  }\n\n  get Email(){\n    return this.formModel.get('Email')\n  }\n  get FullName(){\n    return this.formModel.get('FullName')\n  }\n  get Password(){\n    return this.formModel.get('Passwords').get('Password')\n  }\n  get ConfirmPassword(){\n    return this.formModel.get(\"Passwords\").get(\"ConfirmPassword\")\n  }\n\n  ComparePasswords(fb: FormGroup){\n    let ConfirmPassword = fb.get('ConfirmPassword')\n    let Password = fb.get('Password')\n    if (ConfirmPassword.errors == null || 'passwordMismatch' in ConfirmPassword.errors){\n      if(Password.value != ConfirmPassword.value)\n        ConfirmPassword.setErrors({ passwordMismatch: true });\n      else\n        ConfirmPassword.setErrors(null);\n      }\n  }\n\n  Submit(){\n    var userBody = {\n      UserName: this.UserName.value,\n      Email: this.Email.value,\n      FullName: this.FullName.value,\n      Password: this.Password.value\n    }\n    this.servise.register(userBody).subscribe((res: any) =>{\n      if(res.Succeeded)\n        {//reikia padaryt toastą\n          console.log(res);  \n        }\n      else{\n        this.errors = [];\n        res.Errors.forEach(element => {\n          this.errors.push(element.Description)\n        });\n        console.log(res)\n      }\n    },\n    err => console.log(err))\n  }\n\n}\n","<form [formGroup]=formModel autocomplete=\"off\" (ngSubmit)=\"Submit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"UserName\">\n    </div>\n    <div *ngIf=\"UserName.touched && !UserName.valid\" class=\"alert alert-danger\">This fiel is required</div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"Email\">\n    </div>\n    <div *ngIf=\"Email.touched && !Email.valid\" class=\"alert alert-danger\">This fiel is required</div>\n    <div *ngIf=\"Email.errors?.email\" class=\"alert alert-danger\">Invalid email address</div>\n    <div class=\"form-group\">\n        <label>Full name</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"FullName\">\n    </div>\n    <div *ngIf=\"FullName.touched && !FullName.valid\" class=\"alert alert-danger\">This fiel is required</div>\n    <div formGroupName=\"Passwords\">\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input class=\"form-control\" type=\"password\" formControlName=\"Password\">\n        </div>\n        <div *ngIf=\"Password.touched && !Password.valid\" class=\"alert alert-danger\">This fiel is required</div>\n        <div *ngIf=\"Password.touched && Password.errors?.minlength\" class=\"alert alert-danger\">Password should be at least 6 letters</div>\n        <div class=\"form-group\">\n            <label>Confirm Password</label>\n            <input class=\"form-control\" type=\"password\" formControlName=\"ConfirmPassword\">\n        </div>\n        <div *ngIf=\"ConfirmPassword.touched && !ConfirmPassword.valid\" class=\"alert alert-danger\">This fiel is required</div>\n        <div *ngIf=\"ConfirmPassword.errors?.passwordMismatch\" class=\"alert alert-danger\">Passwords do not match</div>\n    </div>\n    <div class=\"form-row\">\n        <div>\n            <button type=\"submit\" class=\"btn btn-success\" >Sign Up</button>\n        </div>\n    </div>\n    <div *ngIf=\"errors.length > 0\" class=\"alert alert-danger\">\n        <p *ngFor=\"let e of errors\">{{e}}</p>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"container\">\n    <div class=\"col-md-8 offset-sm-2\">\n        <registration-form></registration-form>\n    </div>\n</div> -->\n<div class=\"container\">\n    <div class=\"row\">\n        <div>\n            <ul class=\"nav nav-tabs justify-content-center\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" [routerLink]=\"['/user/login/']\" routerLinkActive='active'>Sign In</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" [routerLink]=\"['/user/registration/']\" routerLinkActive='active'>Sign up</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-8\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { ExerciseDetail } from './../../shared/models/exercise-detail.model';\nimport { Component, OnInit, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { MusculeGroup } from 'src/app/enumerations/musculeGroup';\nimport { ExerciseDetailService } from 'src/app/shared/exercise-detail.service';\nimport { WorkoutDetailService } from 'src/app/shared/workout-detail.service';\n\n@Component({\n  selector: 'addexer-list',\n  templateUrl: './addexer-list.component.html',\n  styleUrls: ['./addexer-list.component.css']\n})\nexport class AddexerListComponent implements OnInit {\n  groups=MusculeGroup;\n  filter: any = {};\n\n  constructor(private exerciseService: ExerciseDetailService,\n    private workoutServise: WorkoutDetailService, \n    private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.exerciseService.refreshList();\n    this.cdr.detectChanges()\n  }\n\n  get Exercises(): ExerciseDetail[] {\n    var list = this.exerciseService.list\n    if(this.filter.Index != null) list = list.filter(e => e.MusculeGroup == this.filter.Index)\n    return list\n  }\n\n  AddExer(id, name/*: workoutExercise*/){\n    this.workoutServise.AddExercise(id, name)\n  }\n\n  onFilterChange(){\n    console.log(this.filter.Index)\n    this.cdr.detectChanges()\n  }\n\n  resetFilter(){\n    this.filter={};\n    this.onFilterChange()\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"form-group card-body\">\n        <label for=\"musculeGroup\">Filter exercises by muscule group </label>\n            <select id=\"musculeGroup\" class=\"form-control\" [(ngModel)]=\"filter.Index\" (change)=\"onFilterChange()\">\n                <option value=\"null\"></option>\n                <option *ngFor=\"let group of groups.values() ; index as i \" [ngValue]=\"i\" >{{group}}</option>\n            </select>\n    </div>\n    <button class=\"btn btn-secondary\" (click)=resetFilter()>Reset</button>\n</div>\n<div *ngIf=\"filter.Index!=null\">\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>\n                <th>Title</th>\n                <th>Muscule Group</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let exer of Exercises\">\n                <td scope=\"row\" >{{exer.Name}}</td>\n                <td scope=\"row\">{{groups[exer.MusculeGroup]}}</td>\n                <td (click)=\"AddExer(exer.ExerciseId, exer.Name)\"><i style=\"font-size:35px;\" class=\"material-icons\">add_circle_outline</i></td>\n            </tr>       \n        </tbody>\n    </table>\n</div>","import { ActivatedRoute, Router } from '@angular/router';\nimport { WorkoutExercise, WorkoutDetail } from './../../shared/models/workout-detail.model';\nimport { WorkoutDetailService } from './../../shared/workout-detail.service';\nimport { Component, OnInit, ChangeDetectorRef, AfterViewInit, NgZone, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormArray } from '@angular/forms';\nimport { tap, delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'workout-detail',\n  templateUrl: './workout-detail.component.html',\n  styleUrls: ['./workout-detail.component.css']\n})\nexport class WorkoutDetailComponent implements OnInit, AfterViewInit {\n  form: FormGroup;\n  index = 1;\n\n  constructor(\n    private ngZode: NgZone,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router, \n    private service: WorkoutDetailService,\n    private cdr: ChangeDetectorRef) {\n      \n     }\n\n  ngAfterViewInit(): void {\n    this.service.currentExercise.pipe(delay(0)).subscribe((res: WorkoutExercise) => {if(res.ExerciseId) this.AddExer(res)})\n    this.cdr.detectChanges();\n  }\n\n  ngOnInit(): void {\n    this.resetForm()\n   }\n\n  PopulateForm(workout: WorkoutDetail) {\n    this.index = workout.Exercises.length;\n    this.form = this.formBuilder.group({\n      WorkoutId: workout.WorkoutId,\n      Title: workout.Title,\n      Type: 0,\n      Date: new Date(workout.Date).toISOString().slice(0, 10),\n      Exercises: this.formBuilder.array([])\n    })\n    workout.Exercises.forEach(element => {\n      this.AddExer(element)\n    });    \n  }\n  \n  ClearForm() {\n    this.index = 1;\n    return this.formBuilder.group({\n      WorkoutId: 0,\n      Title: \"\",\n      Type: 0,\n      Date: null,\n      Exercises: this.formBuilder.array([])\n    });\n  }\n\n  CreateExer(exercise: WorkoutExercise): FormGroup{\n    return this.formBuilder.group({\n      ExerciseId: exercise.ExerciseId,\n      Name: exercise.Name,\n      Sets: exercise.Sets,\n      Reps: exercise.Reps,\n      Index: exercise.Index\n    })\n  }\n\n  AddExer(exercise: WorkoutExercise) {\n    exercise.Index = this.index;\n    this.index =this.index + 1;\n    (this.form.get('Exercises') as FormArray).push(this.CreateExer(exercise))\n  }\n\n  RemoveExer(index: number) {\n    (this.form.get('Exercises') as FormArray).removeAt(index);\n  }\n\n  get Title() {\n    return this.form.get('Title')\n  }\n\n  get Exercises() {\n    return this.form.get('Exercises') as FormArray;\n  }\n\n  getAt(i: number){\n    return this.Exercises.at(i) as FormControl\n  }\n\n  Submit() {\n    delete this.form.value.Name;\n    if(+this.form.get(\"WorkoutId\").value == 0){\n      this.ngZode.run(() => {\n        this.service.Add(this.form.value).subscribe(res => this.service.workout.next(res))\n        this.resetForm()\n      })\n    }\n    //cia reikia tosterio\n    else {\n      this.ngZode.run(() => {\n        this.service.Update(this.form.get(\"WorkoutId\").value, this.form.value).subscribe(res => this.service.workout.next(res))\n        this.router.navigate(['/workouts/', +this.form.get(\"WorkoutId\").value])\n        this.resetForm()\n      })\n    }\n  }\n\n  resetForm(){\n    this.form = this.ClearForm();\n    this.service.exercise.next({});\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=Submit()>\n    <div class=\"form-group\">\n        <label for=\"Title\">Title</label>\n        <input formControlName=\"Title\" type=\"text\" id=\"Title\" class=\"form-control\" required>\n        <input formControlName=\"WorkoutId\" type=\"hidden\" id=\"WorkoutId\" class=\"form-control\">\n    </div>\n    <div *ngIf=\"Title.touched && !Title.valid\" class=\"alert alert-danger\">Please specify the title of workout</div>\n    <div class=\"form-group\">\n        <input formControlName=\"Type\" type=\"hidden\" id=\"Type\" value=\"0\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"Date\">Date</label>\n        <input formControlName=\"Date\" type=\"date\" id=\"Date\" class=\"form-control\" required>\n    </div>\n    <!-- <div *ngIf=\"Date.touched && !Date.valid\" class=\"alert alert-danger\">Please specify the date of workout</div> -->\n    <div formArrayName=\"Exercises\" *ngFor=\"let item of Exercises.controls; let i = index;\">\n        <div [formGroupName]=\"i\">\n            <div>\n              <div class=\"form-group\">\n                <input type=\"hidden\" class=\"form-control\" formControlName=\"ExerciseId\">\n                <input type=\"hidden\" class=\"form-control\" formControlName=\"Index\" >\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-10\">\n                  <label for=\"Name\">Exercise</label>\n                  <input id=\"Name\" readonly type=\"text\" class=\"form-control\" formControlName=\"Name\" placeholder=\"Item title\" required>\n                </div>\n                <div class=\"form-group col-2 d-flex justify-content-center\">\n                  <i class=\"form-control\" style=\"display: inline-block; width: 100%; margin-top: 30%; height: 100%; font-size:50px;\" (click)=\"RemoveExer(i)\" class=\"material-icons\">remove_circle_outline</i>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"col\">\n                    <label for=\"Sets\">Sets</label>\n                    <input id=\"Sets\" type=\"number\" min=\"1\" max=\"1000000\" class=\"form-control\" formControlName=\"Sets\" required>\n                </div>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <label for=\"Reps\">Repetitions</label>\n                    <input id=\"Reps\" type=\"number\" min=\"1\" max=\"1000000\" class=\"form-control\" formControlName=\"Reps\" required>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"item.controls.Sets.touched && !item.controls.Sets.valid || item.controls.Reps.touched && !item.controls.Reps.valid\" class=\"alert alert-danger\">Please specify the numbers of sets and repetitions</div>\n            </div>\n          </div>\n    </div>\n    <button class=\"btn btn-lg btn-block btn-info \" type=\"sumbit\" [disabled]=\"form.invalid\" >Submit</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { MusculeGroup } from '../enumerations/musculeGroup';\n\n@Component({\n  selector: 'workout-details',\n  templateUrl: './workout-details.component.html',\n  styleUrls: ['./workout-details.component.css']\n})\nexport class WorkoutDetailsComponent implements OnInit {\n  groups = MusculeGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h1 class=\"display-4 text-center\">New Workouts Register</h1>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <workout-detail></workout-detail>\n            <br>\n            <addexer-list></addexer-list>\n        </div>\n        <div class=\"col-md-7\">\n            <workout-list></workout-list>\n        </div>\n    </div>\n</div>\n","import { WorkoutDetailComponent } from './../workout-detail/workout-detail.component';\nimport { WorkoutDetailService } from 'src/app/shared/workout-detail.service';\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WorkoutDetail } from 'src/app/shared/models/workout-detail.model';\n\n@Component({\n  selector: 'app-workout-edit',\n  templateUrl: './workout-edit.component.html',\n  styleUrls: ['./workout-edit.component.css']\n})\nexport class WorkoutEditComponent implements OnInit {\n  @ViewChild(WorkoutDetailComponent)\n  private detailComponent: WorkoutDetailComponent;\n  id: number;\n  workout: WorkoutDetail;\n\n  constructor(private route: ActivatedRoute,\n    private service: WorkoutDetailService,\n    private ngZone: NgZone) {\n    route.params.subscribe(p =>\n      this.id = +p['id'])\n  }\n\n  ngOnInit(): void {\n    //this.ngZone.run(() => {\n      this.service.get(this.id).subscribe((res: WorkoutDetail) => {\n        this.workout = res;\n        this.detailComponent.PopulateForm(this.workout);\n      });\n    //})\n  }\n\n\n\n}\n","<div>\n    <h1 class=\"display-4 text-center\">Workout Edit {{id}}</h1>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <workout-detail></workout-detail>\n        </div>\n        <div class=\"col-md-7\">\n            <addexer-list></addexer-list>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WorkoutDetailService } from 'src/app/shared/workout-detail.service';\nimport { WorkoutDetail } from 'src/app/shared/models/workout-detail.model';\n\n@Component({\n  selector: 'workout-list',\n  templateUrl: './workout-list.component.html',\n  styleUrls: ['./workout-list.component.css']\n})\nexport class WorkoutListComponent implements OnInit {\n  list: WorkoutDetail[] = [];\n  constructor(private service: WorkoutDetailService) { }\n\n  ngOnInit(): void {\n    this.service.GetList().subscribe((res: WorkoutDetail[]) => this.list = res)\n    this.service.newWorkout.subscribe((res: WorkoutDetail) => { if (res.Title) this.list.push(res)})\n  }\n}\n","<div class=\"container-lg\">\n    <div class=\"row row-cols-1 row-cols-md-1 row-cols-lg-2\">\n        <div *ngFor=\"let w of list\" class=\"card col\" >\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{w.Title}}</h5>\n                <h6 class=\"card-subtitle mb-2 text-muted\">{{w.Date | date:'fullDate'}}</h6>\n                <a [routerLink]=\"['/workouts/', w.WorkoutId]\" class=\"card-link\">Open Workout</a>\n            </div>\n        </div>\n    </div>\n</div>","import { WorkoutDetail } from 'src/app/shared/models/workout-detail.model';\nimport { element } from 'protractor';\nimport { ExerciseDetailService } from 'src/app/shared/exercise-detail.service';\nimport { ExerciseDetail } from './../../shared/models/exercise-detail.model';\nimport * as _ from 'underscore';\nimport { WorkoutDetailService } from 'src/app/shared/workout-detail.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-workout-view',\n  templateUrl: './workout-view.component.html',\n  styleUrls: ['./workout-view.component.css']\n})\nexport class WorkoutViewComponent implements OnInit {\n  workout = { Title: \"Loading...\", Exercises: []}\n  exercises: ExerciseDetail[]\n  id: number;\n\n  constructor(private servise: WorkoutDetailService,\n    private exerciseServise: ExerciseDetailService,\n    route: ActivatedRoute,\n    private router: Router) { \n      route.params.subscribe(p => {\n        this.id = +p['id']\n        if(isNaN(this.id) || this.id <= 0)\n        router.navigate(['/workouts']);\n        return;\n      });\n    }\n\n    edit(){\n      this.router.navigate(['/workouts/edit/', this.id])\n    }\n    \n    ngOnInit(): void {\n      this.servise.get(this.id).subscribe((w: WorkoutDetail) =>{\n        this.workout = w;\n        this.workout.Exercises.sort(\n          (obj1, obj2) => {\n            if (obj1.Index > obj2.Index) {\n                return 1;\n            }\n        \n            if (obj1.Index < obj2.Index) {\n                return -1;\n            }\n        \n            return 0;\n        }\n        );\n        console.log(this.workout.Exercises)\n      });\n  }\n\n  delete(){\n    if (confirm(\"Are you sure?\"))\n    this.servise.delete(this.id)\n      .subscribe(x => {\n        this.router.navigate(['/workouts']);\n      })\n  }\n}\n","<h1 *ngIf=\"workout.Title\">{{workout.Title}} <i (click)=\"edit()\" style=\"font-size:35px;\" class=\"material-icons\">create</i></h1>\n<div *ngFor=\"let we of workout.Exercises; let i = index\">\n    <exercise-view [exercise]=\"we\" [index]=\"i\"></exercise-view>\n</div>\n<button class=\"btn btn-success\">Done</button>\n<button type=\"button\" [routerLink]=\"['/workouts']\" class=\"btn btn-light\">Back to list</button>\n<button class=\"btn btn-danger\" (click)=\"delete()\">Delete</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}