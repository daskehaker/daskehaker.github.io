{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/enumerations/musculeGroup.ts","webpack:///src/app/exercise-details/exercise-detail/exercise-detail.component.ts","webpack:///src/app/exercise-details/exercise-detail/exercise-detail.component.html","webpack:///src/app/exercise-details/exercise-details.component.ts","webpack:///src/app/exercise-details/exercise-details.component.html","webpack:///src/app/exercise-details/exercise-list/exercise-list.component.ts","webpack:///src/app/exercise-details/exercise-list/exercise-list.component.html","webpack:///src/app/exercise-details/exercise-view/exercise-view.component.ts","webpack:///src/app/exercise-details/exercise-view/exercise-view.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/projects/project/project.component.ts","webpack:///src/app/projects/project/project.component.html","webpack:///src/app/projects/projects-list/projects-list.component.ts","webpack:///src/app/projects/projects-list/projects-list.component.html","webpack:///src/app/projects/projects.component.ts","webpack:///src/app/projects/projects.component.html","webpack:///src/app/shared/custome-pipes/order-by-index.pipe.ts","webpack:///src/app/shared/exercise-detail.service.ts","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/project.service.ts","webpack:///src/app/shared/user.service.ts","webpack:///src/app/shared/workout-detail.service.ts","webpack:///src/app/user/login-form/login-form.component.ts","webpack:///src/app/user/login-form/login-form.component.html","webpack:///src/app/user/registration-form/registration-form.component.ts","webpack:///src/app/user/registration-form/registration-form.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/workout-details/addexer-list/addexer-list.component.ts","webpack:///src/app/workout-details/addexer-list/addexer-list.component.html","webpack:///src/app/workout-details/workout-detail/workout-detail.component.ts","webpack:///src/app/workout-details/workout-detail/workout-detail.component.html","webpack:///src/app/workout-details/workout-details.component.ts","webpack:///src/app/workout-details/workout-details.component.html","webpack:///src/app/workout-details/workout-edit/workout-edit.component.ts","webpack:///src/app/workout-details/workout-edit/workout-edit.component.html","webpack:///src/app/workout-details/workout-list/workout-list.component.ts","webpack:///src/app/workout-details/workout-list/workout-list.component.html","webpack:///src/app/workout-details/workout-view/workout-view.component.ts","webpack:///src/app/workout-details/workout-view/workout-view.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","forRoot","path","component","children","canActivate","redirectTo","pathMatch","declarations","imports","providers","bootstrap","AuthGuard","router","next","state","localStorage","getItem","navigate","providedIn","AuthInterceptor","clonedReq","clone","headers","set","handle","pipe","succ","err","status","removeItem","navigateByUrl","MusculeGroup","values","Object","filter","type","isNaN","ExerciseDetailComponent","service","toastr","groups","resetForm","form","formData","ExerciseId","Name","VideoUrl","insert","update","put","subscribe","res","info","refreshList","console","log","post","success","onSubmit","ExerciseDetailsComponent","ExerciseListComponent","exercise","assign","warning","list","ExerciseViewComponent","sanitizer","isShowDiv","indexOf","replace","safeUrl","bypassSecurityTrustResourceUrl","HomeComponent","servise","user","getUser","ProjectComponent","ProjectId","get","ProjectsListComponent","isTouched","project","edit","confirm","ProjectsComponent","OrderByIndexPipe","value","name","ExerciseDetailService","http","rootUrl","toPromise","NavbarComponent","logout","ProjectService","data","Date","toISOString","slice","Title","Description","sort","a","b","UserService","newUser","WorkoutDetailService","currentExercise","asObservable","workout","newWorkout","Reps","Sets","Index","LoginFormComponent","formModel","UserName","Password","login","setItem","token","submit","RegistrationFormComponent","formBuilder","group","required","Email","email","FullName","Passwords","minLength","ConfirmPassword","validator","ComparePasswords","errors","reset","fb","setErrors","passwordMismatch","userBody","register","Succeeded","Errors","forEach","element","push","Submit","UserComponent","AddexerListComponent","exerciseService","workoutServise","cdr","detectChanges","AddExercise","onFilterChange","resetFilter","WorkoutDetailComponent","ngZode","route","index","AddExer","Exercises","length","WorkoutId","Type","array","CreateExer","removeAt","i","at","run","Add","Update","ClearForm","WorkoutDetailsComponent","WorkoutEditComponent","ngZone","params","p","detailComponent","PopulateForm","WorkoutListComponent","GetList","WorkoutViewComponent","exerciseServise","w","obj1","obj2","x","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TaskerFront';\n}\n","<div>\n  <navbar></navbar>\n  <div class=\"jumbotron\">\n    <router-outlet></router-outlet>\n  </div>\n</div>","import { ProjectsListComponent } from './projects/projects-list/projects-list.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ProjectComponent } from './projects/project/project.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { RouterModule } from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { ExerciseDetailsComponent } from './exercise-details/exercise-details.component';\nimport { ExerciseDetailComponent } from './exercise-details/exercise-detail/exercise-detail.component';\nimport { ExerciseListComponent } from './exercise-details/exercise-list/exercise-list.component';\nimport { ExerciseDetailService } from './shared/exercise-detail.service';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { WorkoutDetailsComponent } from './workout-details/workout-details.component';\nimport { WorkoutDetailComponent } from './workout-details/workout-detail/workout-detail.component';\nimport { WorkoutListComponent } from './workout-details/workout-list/workout-list.component';\nimport { AddexerListComponent } from './workout-details/addexer-list/addexer-list.component';\nimport { CommonModule } from '@angular/common';\nimport { WorkoutViewComponent } from './workout-details/workout-view/workout-view.component';\nimport { ExerciseViewComponent } from './exercise-details/exercise-view/exercise-view.component';\nimport { OrderByIndexPipe } from './shared/custome-pipes/order-by-index.pipe';\nimport { RegistrationFormComponent } from './user/registration-form/registration-form.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginFormComponent } from './user/login-form/login-form.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { WorkoutEditComponent } from './workout-details/workout-edit/workout-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExerciseDetailsComponent,\n    ExerciseDetailComponent,\n    ExerciseListComponent,\n    NavbarComponent,\n    WorkoutDetailsComponent,\n    WorkoutDetailComponent,\n    WorkoutListComponent,\n    AddexerListComponent,\n    WorkoutViewComponent,\n    ExerciseViewComponent,\n    OrderByIndexPipe,\n    RegistrationFormComponent,\n    UserComponent,\n    LoginFormComponent,\n    HomeComponent,\n    ProjectComponent,\n    ProjectsComponent,\n    ProjectsListComponent,\n    WorkoutEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forRoot([\n      {path: 'user', component: UserComponent, children: [\n        {path: 'registration', component: RegistrationFormComponent},\n        {path: 'login', component: LoginFormComponent}\n      ]},\n      {path: 'workouts/edit/:id', component: WorkoutEditComponent},\n      {path: 'workouts/:id', component: WorkoutViewComponent},\n      {path: 'home', component: HomeComponent, canActivate:[AuthGuard]},\n      {path: 'exercises', component: ExerciseDetailsComponent, canActivate:[AuthGuard]},\n      {path: 'workouts', component: WorkoutDetailsComponent, canActivate:[AuthGuard]},\n      {path: 'projects', component: ProjectsComponent, canActivate:[AuthGuard]},\n      {path: '', redirectTo: 'user/login', pathMatch: 'full'},\n      {path: '**', redirectTo: 'exercises', pathMatch: 'full'},\n    ])\n  ],\n  providers: [\n    ExerciseDetailService,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private router: Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('token'))\n        return true;\n      else {\n        this.router.navigate(['/user/login'])\n        return false;\n      }\n  }\n  \n}\n","import { Router } from '@angular/router';\r\n//Sitas naudojamas tam, kad nereiktu su kiekvienu \r\n//requestu siusti tokeno\r\n\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n    constructor(private router: Router) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if(localStorage.getItem('token')){\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer '+localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ => {},\r\n                    err => {\r\n                        if(err.status == 401)\r\n                        localStorage.removeItem('token')\r\n                        this.router.navigateByUrl('/user/login')//galima dar ir toteri idet, kad erroras\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else\r\n            return next.handle(req.clone());\r\n    }\r\n\r\n}","export enum MusculeGroup{\r\n    Legs = 0,\r\n    Chest,\r\n    Back,\r\n    Biceps,\r\n    Triceps,\r\n    Abs,\r\n    Cardio,\r\n\tSoulders\r\n}\r\n\r\nexport namespace MusculeGroup {\r\n\r\n    export function values() {\r\n      return Object.keys(MusculeGroup).filter(\r\n        (type) => isNaN(<any>type) && type !== 'values'\r\n      );\r\n    }\r\n  }","import { MusculeGroup } from './../../enumerations/musculeGroup';\nimport { ExerciseDetailService } from './../../shared/exercise-detail.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'exercise-detail',\n  templateUrl: './exercise-detail.component.html',\n  styleUrls: ['./exercise-detail.component.css']\n})\nexport class ExerciseDetailComponent implements OnInit {\n  groups = MusculeGroup;\n\n  constructor(private service: ExerciseDetailService,\n    private toastr: ToastrService) {\n    }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  get getService(){\n    return this.service;\n  }\n\n  resetForm(form?:NgForm){\n    if(form) form.resetForm()\n    this.service.formData = {\n      ExerciseId: 0,\n      MusculeGroup: null,\n      Name: \"\",\n      VideoUrl: null\n    }\n  }\n\n  onSubmit(form:NgForm){\n    if(this.service.formData.ExerciseId==0) this.insert(form)\n    else this.update(form)\n  }\n\n  update(form:NgForm){\n    this.service.put().subscribe(\n      res => {\n        this.resetForm(form)\n        this.toastr.info('Exercise Updated successfully')\n        this.service.refreshList()\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n  insert(form:NgForm){\n    this.service.post().subscribe(\n      res => {\n        this.resetForm(form)\n        this.toastr.success('Exercise submitted successfully')\n        this.service.refreshList()\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"ExerciseId\" #ExerciseId=\"ngModel\" [ngModel]=\"getService.formData.ExerciseId\">\n    <div class=\"form-group\">\n        <label for=\"group\">Muscule Group</label>\n        <select id=\"group\" class=\"form-control\" name=\"musculeGroup\" #musculeGroup=\"ngModel\" \n        [(ngModel)]=\"getService.formData.MusculeGroup\" required>\n            <option value=\"\"></option>\n            <option *ngFor=\"let group of groups.values() ; index as i \" [ngValue]=\"i\" >{{group}}</option>\n        </select>\n        <div *ngIf=\"musculeGroup.touched && !musculeGroup.valid\" class=\"alert alert-danger\">Please specify the targeted muscule group</div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <input class=\"form-control\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"getService.formData.Name\"\n            placeholder=\"Enter the name of the exercise\" maxlength=\"50\" required>\n        </div>\n        <div *ngIf=\"name.touched && !name.valid\" class=\"alert alert-danger\">Please specify the name of exercise</div>\n    </div>\n    <div class=\"form-group\">\n        <input name=\"VideoUrl\" #VideoUrl=\"ngModel\" [(ngModel)]=\"getService.formData.VideoUrl\" \n        class=\"form-control\" placeholder=\"Add the URL of the exercise video\" maxLength=\"500\">\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-lg btn-block btn-info \" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n    </div>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'exercise-details',\n  templateUrl: './exercise-details.component.html',\n  styleUrls: ['./exercise-details.component.css']\n})\nexport class ExerciseDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h1 class=\"display-4 text-center\">New Exercise Register</h1>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <exercise-detail></exercise-detail>\n        </div>\n        <div class=\"col-md-7\">\n            <exercise-list></exercise-list>\n        </div>\n    </div>\n</div>\n","import { MusculeGroup } from './../../enumerations/musculeGroup';\nimport { ExerciseDetail } from './../../shared/models/exercise-detail.model';\nimport { ExerciseDetailService } from './../../shared/exercise-detail.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'exercise-list',\n  templateUrl: './exercise-list.component.html',\n  styleUrls: ['./exercise-list.component.css']\n})\nexport class ExerciseListComponent implements OnInit {\n  groups=MusculeGroup;\n  constructor(private service: ExerciseDetailService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.service.refreshList();\n  }\n\n  get Exercises(): ExerciseDetail[] {\n    return this.service.list\n  }\n\n  populateForm(exercise: ExerciseDetail){\n    this.service.formData = Object.assign({}, exercise)\n  }\n\n  onDelete(id:number){\n    this.service.delete(id).subscribe(\n      res => {\n        this.toastr.warning('Exercise Deleted successfully')\n        this.service.refreshList()\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n}\n","<table class=\"table table-hover\">\n    <thead>\n        <tr>\n            <th>Title</th>\n            <th>Muscule Group</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let exer of Exercises\">\n            <td scope=\"row\" (click)=\"populateForm(exer)\">{{exer.Name}}</td>\n            <td scope=\"row\">{{groups[exer.MusculeGroup]}}</td>\n            <td><button class=\"btn btn-danger btn-sm\" (click)=\"onDelete(exer.ExerciseId)\">Delete</button></td>\n        </tr>       \n    </tbody>\n</table>","import { ExerciseDetailService } from 'src/app/shared/exercise-detail.service';\nimport { WorkoutExercise } from './../../shared/models/workout-detail.model';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ExerciseDetail } from 'src/app/shared/models/exercise-detail.model';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'exercise-view',\n  templateUrl: './exercise-view.component.html',\n  styleUrls: ['./exercise-view.component.css']\n})\nexport class ExerciseViewComponent implements OnInit {\n  @Input() exercise: WorkoutExercise;\n  @Input() index: number;\n\n  safeUrl: any\n  isShowDiv = true;\n\n  constructor(private sanitizer: DomSanitizer) {\n    \n  }\n\n  ngOnInit(): void {\n    if(this.exercise.VideoUrl){\n      if(this.exercise.VideoUrl.indexOf('youtube.com/watch?v=')>0)\n      this.exercise.VideoUrl = this.exercise.VideoUrl.replace('youtube.com/watch?v=', 'youtube.com/embed/');\n      this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.exercise.VideoUrl);\n    }\n  }\n\n  toggleDisplayDiv() {\n    this.isShowDiv = !this.isShowDiv;\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{index + 1}} {{exercise.Name}}</h5>   \n    <div *ngIf=\"exercise.VideoUrl\">\n      <span (click)=\"toggleDisplayDiv()\" class=\"material-icons\">movie</span>    \n      <div [hidden]=\"isShowDiv\" class=\"embed-responsive embed-responsive-16by9\">\n        <iframe class=\"embed-responsive-item\" [src]='safeUrl' allowfullscreen></iframe>\n      </div>\n    </div>\n    <p class=\"card-text\">{{exercise.Sets}} sets, {{exercise.Reps}} reps</p>\n  </div>\n</div>","import { UserService } from './../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  user: any = {}\n\n  constructor(private servise: UserService) { }\n\n  ngOnInit(): void {\n    this.servise.getUser().subscribe(res => this.user = res)\n  }\n\n}\n","<p>Hello {{user.UserName}}, Welcome to doPlan</p>\n\n","import { ProjectDetail } from './../../shared/models/project-detail.models';\r\nimport { Component, OnInit } from '@angular/core';\r\n// import { Project } from 'src/app/interfaces/project';\r\nimport { NgForm, FormArray } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n  constructor(public service: ProjectService, private toastr: ToastrService) {}\r\n\r\n  ngOnInit() {\r\n    this.service.resetForm();\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.ProjectId==0) this.insert(form)\r\n    else this.update(form)\r\n  }\r\n\r\n  get formData(){\r\n    return this.service.formData;\r\n  }\r\n\r\n  update(form:NgForm){\r\n    console.log(\"reikia updatint\")\r\n    this.service.put().subscribe(\r\n      res => {\r\n        this.service.resetForm(form)\r\n        this.toastr.info('Exercise Updated successfully')\r\n        this.service.get()\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n  insert(form:NgForm){\r\n    this.service.post().subscribe(\r\n      res => {\r\n        this.service.resetForm(form)\r\n        this.toastr.success('Project submitted successfully')\r\n        this.service.get()\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n  <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.ProjectId\">\n  <div class=\"form-group\">\n    <input id=\"title\" name=\"Title\" #Title=\"ngModel\" \n    [(ngModel)]=\"formData.Title\" class=\"form-control\" \n    placeholder=\"Title\" required>\n    <div class=\"alert alert-danger\" *ngIf=\"!Title.valid && Title.touched\">Title is required</div>\n  </div>\n  <div class=\"form-group\">\n    <input type=\"date\" name=\"Date\" class=\"form-control\" #Date=\"ngModel\" [(ngModel)]=\"formData.Date\" required>\n  </div>\n  <div class=\"form-group\">\n    <textarea row=\"3\" id=\"description\" name=\"Description\" #Description=\"ngModel\" \n    [(ngModel)]=\"formData.Description\" class=\"form-control\" \n    placeholder=\"Description (optional)\"></textarea>\n  </div>\n  <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-lg btn-block btn-info \">Submit</button>\n</form>\n\n<p>{{ formData | json}}</p>","import { ToastrService } from 'ngx-toastr';\r\nimport { ProjectDetail } from './../../shared/models/project-detail.models';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { runInThisContext } from 'vm';\r\n\r\n\r\n@Component({\r\n  selector: 'projects-list',\r\n  templateUrl: './projects-list.component.html',\r\n  styleUrls: ['./projects-list.component.css']\r\n})\r\nexport class ProjectsListComponent implements OnInit {\r\n  isTouched: boolean;\r\n\r\n  constructor(private service: ProjectService, private toastr: ToastrService) {\r\n    this.isTouched=false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.get()\r\n    //this.service.sort()\r\n  }\r\n\r\n  get projects() {\r\n    return this.service.list\r\n  }\r\n\r\n  populateForm(project: ProjectDetail){\r\n    this.isTouched = !this.isTouched;\r\n    this.service.edit(project, this.isTouched)\r\n  }\r\n\r\n  onDelete(id:number){\r\n    if (confirm(\"Are you sure?\"))\r\n    this.service.delete(id).subscribe(\r\n      res => {\r\n        this.toastr.warning('Project Deleted successfully')\r\n        this.service.get()\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div *ngFor=\"let project of projects\" class=\"card\" style=\"width: 80%;\">\r\n  <div class=\"card-body\">\r\n    <h5 (click)=\"populateForm(project)\" class=\"card-title\">{{project.Title}}</h5>\r\n    <h6 class=\"card-subtitle mb-2 text-muted\">{{project.Date | date:'fullDate'}}</h6>\r\n    <p *ngIf=\"project.Description\" class=\"card-text\">{{project.Description}}</p>\r\n    <button class=\"btn btn-sm btn-danger\" (click)=\"onDelete(project.ProjectId)\">Delete</button>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div>\r\n  <h1 class=\"display-4 text-center\">New Projects Register</h1>\r\n  <hr>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5\">\r\n      <project></project>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <projects-list></projects-list>\r\n    </div>\r\n  </div>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderByIndex'\n})\nexport class OrderByIndexPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","import { ExerciseDetail } from './models/exercise-detail.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExerciseDetailService {\n  formData: ExerciseDetail;\n  list: ExerciseDetail[];\n  readonly rootUrl = \"https://tasker2.azurewebsites.net/api/Exercises/\"\n\n  constructor(private http: HttpClient) { }\n\n  post(){\n    return this.http.post(this.rootUrl, this.formData)\n  }\n\n  put(){\n    return this.http.put(this.rootUrl + this.formData.ExerciseId, this.formData)\n  }\n\n  delete(id: number){\n    return this.http.delete(this.rootUrl+id)\n  }\n  \n  get(id: number){\n    return this.http.get(this.rootUrl+id)\n  }\n\n  refreshList(){\n    this.http.get(this.rootUrl).toPromise()\n    .then(res => this.list = res as ExerciseDetail[])\n  }\n}\n","import { UserService } from './../user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  constructor(private servise: UserService) { }\n\n  logout(){\n    this.servise.logout();\n  }\n\n  get localStorage(){\n    return localStorage\n  }\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\n    <div class=\"container\">\n        <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarMenu\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarMenu\">\n            <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"/home\"]'>Home<span class=\"sr-only\"></span></a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"/workouts\"]'>Workouts<span class=\"sr-only\"></span></a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"/exercises\"]'>Exercises</a>\n            </li>\n            <li *ngIf=\"!localStorage.getItem('token')\" class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"/user/login\"]'>Login form</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" [routerLink]='[\"projects\"]'>Projects</a>\n            </li>\n            </ul>\n            <span *ngIf=\"localStorage.getItem('token')\">\n                <a class=\"btn btn-secondary\" (click)=\"logout()\">Logout</a>\n            </span>\n        </div>\n    </div>\n</nav>","import { ProjectDetail } from './models/project-detail.models';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  formData: ProjectDetail;\r\n  list: ProjectDetail[];\r\n  readonly rootUrl = \"https://tasker2.azurewebsites.net/api/Projects/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  post(){\r\n    return this.http.post(this.rootUrl, this.formData)\r\n  }\r\n\r\n  put(){\r\n    return this.http.put(this.rootUrl + this.formData.ProjectId, this.formData)\r\n  }\r\n\r\n  delete(id: number){\r\n    return this.http.delete(this.rootUrl+id)\r\n  }\r\n\r\n  get(){\r\n    return this.http.get(this.rootUrl).toPromise()\r\n    .then((res: ProjectDetail[]) =>{\r\n      this.list = res\r\n      //this.sort();\r\n    })\r\n  } \r\n\r\n  //populate edit form\r\n  edit(data: ProjectDetail, edit: boolean){\r\n    data.Date = (new Date(data.Date).toISOString().slice(0, 10)) as unknown as Date\r\n    if(edit) this.formData = Object.assign({}, data)\r\n    else this.resetForm();\r\n  }\r\n\r\n  resetForm(form?: NgForm) {\r\n    if(form) form.resetForm();\r\n    this.formData={\r\n      ProjectId: 0,\r\n      Date: null,\r\n      Title: \"\",\r\n      Description: null\r\n    }\r\n  }\r\n\r\n  sort() {\r\n    this.list.sort((a: ProjectDetail, b: ProjectDetail) => {\r\n      return +new Date(a.Date) - +new Date(b.Date)\r\n    })\r\n  }\r\n}","import { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  readonly rootUrl = \"https://tasker2.azurewebsites.net/api/applicationusers/\" //\"https://localhost:5001/api/applicationusers/\"\n  constructor(private http: HttpClient, private router: Router) { }\n\n  register(newUser){\n    return this.http.post(this.rootUrl + 'register', newUser)\n  }\n\n  login(user){\n    return this.http.post(this.rootUrl + \"login\", user)\n  }\n\n  logout(){\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('/home');\n  }\n\n  getUser(){\n    // var tokenHeader = new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('token')});\n    //return this.http.get(\"https://localhost:5001/api/userprofiles\");\n    return this.http.get(\"https://tasker2.azurewebsites.net/api/userprofiles\");\n  }\n}\n","import { ExerciseDetail } from './models/exercise-detail.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { WorkoutDetail, WorkoutExercise } from './models/workout-detail.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { threadId } from 'worker_threads';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkoutDetailService {\n  //default: workoutExercise = { ExerciseId: 0, Name: \"\", Reps: 0, Sets: 0 }\n  readonly rootUrl = \"https://tasker2.azurewebsites.net/api/Workouts/\";\n  exercise = new BehaviorSubject({})\n  currentExercise = this.exercise.asObservable();\n  \n  workout = new BehaviorSubject({})\n  newWorkout = this.workout.asObservable();\n  \n  constructor(private http: HttpClient) { }\n  \n  GetList(){\n    return this.http.get(this.rootUrl);\n  }\n  \n  Add(workout: WorkoutDetail){\n    return this.http.post(this.rootUrl, workout)\n  }\n\n  Update(id, workout: WorkoutDetail){\n    return this.http.put(this.rootUrl + id, workout)\n  }\n  \n  get(id){\n    return this.http.get(this.rootUrl + id);\n  }\n  \n  delete(id: number) {\n    return this.http.delete(this.rootUrl + id);\n  }\n\n  AddExercise(id, name){\n    let exercise: WorkoutExercise = { ExerciseId: id, Name: name, Reps: 0, Sets: 0, Index: 0 }\n    this.exercise.next(exercise)\n  }\n}\n\n\n","import { Router } from '@angular/router';\nimport { UserService } from './../../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n  formModel = {\n    UserName: \"\",\n    Password: \"\"\n  }\n\n  constructor(private servise: UserService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('token')) this.router.navigateByUrl('/home');\n  }\n\n  submit(){\n    console.log(this.formModel)\n    this.servise.login(this.formModel).subscribe((res: any) => {\n      localStorage.setItem('token', res.token);\n      this.router.navigateByUrl('/home')\n    },\n    err => console.log(err)) //dar reiks pridet klaidos pranesima\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (ngSubmit)=\"submit()\">\n    <div class=\"form-group\">\n        <label>User Name</label>\n        <input class=\"form-control\" type=\"text\" id=\"UserName\" name=\"UserName\" \n        #UserName=\"ngModel\" \n        [(ngModel)]=\"formModel.UserName\"\n        required>\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input class=\"form-control\" type=\"password\" id=\"Password\" name=\"Password\" \n        #Password=\"ngModel\" \n        [(ngModel)]=\"formModel.Password\"\n        required>\n    </div>\n    <div class=\"form-row\">\n        <div>\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"form.invalid\">Sign In</button>\n        </div>\n    </div>\n</form>\n","import { UserService } from './../../shared/user.service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.css']\n})\nexport class RegistrationFormComponent implements OnInit {\n  formModel = this.formBuilder.group({\n    UserName: ['', Validators.required],\n    Email: ['', [Validators.required, Validators.email]],\n    FullName: ['', Validators.required],\n    Passwords: this.formBuilder.group({\n      Password: ['', [Validators.required, Validators.minLength(6)]],\n      ConfirmPassword: ['', Validators.required]\n    }, {validator: this.ComparePasswords})})\n\n    errors: string[] = []\n\n  constructor(private formBuilder: FormBuilder,\n    private servise: UserService) { }\n\n  ngOnInit(): void {\n    this.formModel.reset()\n  }\n\n  get UserName(){\n    return this.formModel.get('UserName')\n  }\n\n  get Email(){\n    return this.formModel.get('Email')\n  }\n  get FullName(){\n    return this.formModel.get('FullName')\n  }\n  get Password(){\n    return this.formModel.get('Passwords').get('Password')\n  }\n  get ConfirmPassword(){\n    return this.formModel.get(\"Passwords\").get(\"ConfirmPassword\")\n  }\n\n  ComparePasswords(fb: FormGroup){\n    let ConfirmPassword = fb.get('ConfirmPassword')\n    let Password = fb.get('Password')\n    if (ConfirmPassword.errors == null || 'passwordMismatch' in ConfirmPassword.errors){\n      if(Password.value != ConfirmPassword.value)\n        ConfirmPassword.setErrors({ passwordMismatch: true });\n      else\n        ConfirmPassword.setErrors(null);\n      }\n  }\n\n  Submit(){\n    var userBody = {\n      UserName: this.UserName.value,\n      Email: this.Email.value,\n      FullName: this.FullName.value,\n      Password: this.Password.value\n    }\n    this.servise.register(userBody).subscribe((res: any) =>{\n      if(res.Succeeded)\n        {//reikia padaryt toastą\n          console.log(res);  \n        }\n      else{\n        this.errors = [];\n        res.Errors.forEach(element => {\n          this.errors.push(element.Description)\n        });\n        console.log(res)\n      }\n    },\n    err => console.log(err))\n  }\n\n}\n","<form [formGroup]=formModel autocomplete=\"off\" (ngSubmit)=\"Submit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"UserName\">\n    </div>\n    <div *ngIf=\"UserName.touched && !UserName.valid\" class=\"alert alert-danger\">This fiel is required</div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"Email\">\n    </div>\n    <div *ngIf=\"Email.touched && !Email.valid\" class=\"alert alert-danger\">This fiel is required</div>\n    <div *ngIf=\"Email.errors?.email\" class=\"alert alert-danger\">Invalid email address</div>\n    <div class=\"form-group\">\n        <label>Full name</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"FullName\">\n    </div>\n    <div *ngIf=\"FullName.touched && !FullName.valid\" class=\"alert alert-danger\">This fiel is required</div>\n    <div formGroupName=\"Passwords\">\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input class=\"form-control\" type=\"password\" formControlName=\"Password\">\n        </div>\n        <div *ngIf=\"Password.touched && !Password.valid\" class=\"alert alert-danger\">This fiel is required</div>\n        <div *ngIf=\"Password.touched && Password.errors?.minlength\" class=\"alert alert-danger\">Password should be at least 6 letters</div>\n        <div class=\"form-group\">\n            <label>Confirm Password</label>\n            <input class=\"form-control\" type=\"password\" formControlName=\"ConfirmPassword\">\n        </div>\n        <div *ngIf=\"ConfirmPassword.touched && !ConfirmPassword.valid\" class=\"alert alert-danger\">This fiel is required</div>\n        <div *ngIf=\"ConfirmPassword.errors?.passwordMismatch\" class=\"alert alert-danger\">Passwords do not match</div>\n    </div>\n    <div class=\"form-row\">\n        <div>\n            <button type=\"submit\" class=\"btn btn-success\" >Sign Up</button>\n        </div>\n    </div>\n    <div *ngIf=\"errors.length > 0\" class=\"alert alert-danger\">\n        <p *ngFor=\"let e of errors\">{{e}}</p>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"container\">\n    <div class=\"col-md-8 offset-sm-2\">\n        <registration-form></registration-form>\n    </div>\n</div> -->\n<div class=\"container\">\n    <div class=\"row\">\n        <div>\n            <ul class=\"nav nav-tabs justify-content-center\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" [routerLink]=\"['/user/login/']\" routerLinkActive='active'>Sign In</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" [routerLink]=\"['/user/registration/']\" routerLinkActive='active'>Sign up</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-8\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { ExerciseDetail } from './../../shared/models/exercise-detail.model';\nimport { Component, OnInit, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { MusculeGroup } from 'src/app/enumerations/musculeGroup';\nimport { ExerciseDetailService } from 'src/app/shared/exercise-detail.service';\nimport { WorkoutDetailService } from 'src/app/shared/workout-detail.service';\n\n@Component({\n  selector: 'addexer-list',\n  templateUrl: './addexer-list.component.html',\n  styleUrls: ['./addexer-list.component.css']\n})\nexport class AddexerListComponent implements OnInit {\n  groups=MusculeGroup;\n  filter: any = {};\n\n  constructor(private exerciseService: ExerciseDetailService,\n    private workoutServise: WorkoutDetailService, \n    private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.exerciseService.refreshList();\n    this.cdr.detectChanges()\n  }\n\n  get Exercises(): ExerciseDetail[] {\n    var list = this.exerciseService.list\n    if(this.filter.Index != null) list = list.filter(e => e.MusculeGroup == this.filter.Index)\n    return list\n  }\n\n  AddExer(id, name/*: workoutExercise*/){\n    this.workoutServise.AddExercise(id, name)\n  }\n\n  onFilterChange(){\n    console.log(this.filter.Index)\n    this.cdr.detectChanges()\n  }\n\n  resetFilter(){\n    this.filter={};\n    this.onFilterChange()\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"form-group card-body\">\n        <label for=\"musculeGroup\">Filter exercises by muscule group </label>\n            <select id=\"musculeGroup\" class=\"form-control\" [(ngModel)]=\"filter.Index\" (change)=\"onFilterChange()\">\n                <option value=\"null\"></option>\n                <option *ngFor=\"let group of groups.values() ; index as i \" [ngValue]=\"i\" >{{group}}</option>\n            </select>\n    </div>\n    <button class=\"btn btn-secondary\" (click)=resetFilter()>Reset</button>\n</div>\n<div *ngIf=\"filter.Index!=null\">\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>\n                <th>Title</th>\n                <th>Muscule Group</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let exer of Exercises\">\n                <td scope=\"row\" >{{exer.Name}}</td>\n                <td scope=\"row\">{{groups[exer.MusculeGroup]}}</td>\n                <td (click)=\"AddExer(exer.ExerciseId, exer.Name)\"><i style=\"font-size:35px;\" class=\"material-icons\">add_circle_outline</i></td>\n            </tr>       \n        </tbody>\n    </table>\n</div>","import { ActivatedRoute, Router } from '@angular/router';\nimport { WorkoutExercise, WorkoutDetail } from './../../shared/models/workout-detail.model';\nimport { WorkoutDetailService } from './../../shared/workout-detail.service';\nimport { Component, OnInit, ChangeDetectorRef, AfterViewInit, NgZone, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormArray } from '@angular/forms';\nimport { tap, delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'workout-detail',\n  templateUrl: './workout-detail.component.html',\n  styleUrls: ['./workout-detail.component.css']\n})\nexport class WorkoutDetailComponent implements OnInit, AfterViewInit {\n  form: FormGroup;\n  index = 1;\n\n  constructor(\n    private ngZode: NgZone,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router, \n    private service: WorkoutDetailService,\n    private cdr: ChangeDetectorRef) {\n      \n     }\n\n  ngAfterViewInit(): void {\n    this.service.currentExercise.pipe(delay(0)).subscribe((res: WorkoutExercise) => {if(res.ExerciseId) this.AddExer(res)})\n    this.cdr.detectChanges();\n  }\n\n  ngOnInit(): void {\n    this.resetForm()\n   }\n\n  PopulateForm(workout: WorkoutDetail) {\n    this.index = workout.Exercises.length;\n    this.form = this.formBuilder.group({\n      WorkoutId: workout.WorkoutId,\n      Title: workout.Title,\n      Type: 0,\n      Date: new Date(workout.Date).toISOString().slice(0, 10),\n      Exercises: this.formBuilder.array([])\n    })\n    workout.Exercises.forEach(element => {\n      this.AddExer(element)\n    });    \n  }\n  \n  ClearForm() {\n    this.index = 1;\n    return this.formBuilder.group({\n      WorkoutId: 0,\n      Title: \"\",\n      Type: 0,\n      Date: null,\n      Exercises: this.formBuilder.array([])\n    });\n  }\n\n  CreateExer(exercise: WorkoutExercise): FormGroup{\n    return this.formBuilder.group({\n      ExerciseId: exercise.ExerciseId,\n      Name: exercise.Name,\n      Sets: exercise.Sets,\n      Reps: exercise.Reps,\n      Index: exercise.Index\n    })\n  }\n\n  AddExer(exercise: WorkoutExercise) {\n    exercise.Index = this.index;\n    this.index =this.index + 1;\n    (this.form.get('Exercises') as FormArray).push(this.CreateExer(exercise))\n  }\n\n  RemoveExer(index: number) {\n    (this.form.get('Exercises') as FormArray).removeAt(index);\n  }\n\n  get Title() {\n    return this.form.get('Title')\n  }\n\n  get Exercises() {\n    return this.form.get('Exercises') as FormArray;\n  }\n\n  getAt(i: number){\n    return this.Exercises.at(i) as FormControl\n  }\n\n  Submit() {\n    delete this.form.value.Name;\n    if(+this.form.get(\"WorkoutId\").value == 0){\n      this.ngZode.run(() => {\n        this.service.Add(this.form.value).subscribe(res => this.service.workout.next(res))\n        this.resetForm()\n      })\n    }\n    //cia reikia tosterio\n    else {\n      this.ngZode.run(() => {\n        this.service.Update(this.form.get(\"WorkoutId\").value, this.form.value).subscribe(res => this.service.workout.next(res))\n        this.router.navigate(['/workouts/', +this.form.get(\"WorkoutId\").value])\n        this.resetForm()\n      })\n    }\n  }\n\n  resetForm(){\n    this.form = this.ClearForm();\n    this.service.exercise.next({});\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=Submit()>\n    <div class=\"form-group\">\n        <label for=\"Title\">Title</label>\n        <input formControlName=\"Title\" type=\"text\" id=\"Title\" class=\"form-control\" required>\n        <input formControlName=\"WorkoutId\" type=\"hidden\" id=\"WorkoutId\" class=\"form-control\">\n    </div>\n    <div *ngIf=\"Title.touched && !Title.valid\" class=\"alert alert-danger\">Please specify the title of workout</div>\n    <div class=\"form-group\">\n        <input formControlName=\"Type\" type=\"hidden\" id=\"Type\" value=\"0\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"Date\">Date</label>\n        <input formControlName=\"Date\" type=\"date\" id=\"Date\" class=\"form-control\" required>\n    </div>\n    <!-- <div *ngIf=\"Date.touched && !Date.valid\" class=\"alert alert-danger\">Please specify the date of workout</div> -->\n    <div formArrayName=\"Exercises\" *ngFor=\"let item of Exercises.controls; let i = index;\">\n        <div [formGroupName]=\"i\">\n            <div>\n              <div class=\"form-group\">\n                <input type=\"hidden\" class=\"form-control\" formControlName=\"ExerciseId\">\n                <input type=\"hidden\" class=\"form-control\" formControlName=\"Index\" >\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-10\">\n                  <label for=\"Name\">Exercise</label>\n                  <input id=\"Name\" readonly type=\"text\" class=\"form-control\" formControlName=\"Name\" placeholder=\"Item title\" required>\n                </div>\n                <div class=\"form-group col-2 d-flex justify-content-center\">\n                  <i class=\"form-control\" style=\"display: inline-block; width: 100%; margin-top: 30%; height: 100%; font-size:50px;\" (click)=\"RemoveExer(i)\" class=\"material-icons\">remove_circle_outline</i>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"col\">\n                    <label for=\"Sets\">Sets</label>\n                    <input id=\"Sets\" type=\"number\" min=\"1\" max=\"1000000\" class=\"form-control\" formControlName=\"Sets\" required>\n                </div>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <label for=\"Reps\">Repetitions</label>\n                    <input id=\"Reps\" type=\"number\" min=\"1\" max=\"1000000\" class=\"form-control\" formControlName=\"Reps\" required>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"item.controls.Sets.touched && !item.controls.Sets.valid || item.controls.Reps.touched && !item.controls.Reps.valid\" class=\"alert alert-danger\">Please specify the numbers of sets and repetitions</div>\n            </div>\n          </div>\n    </div>\n    <button class=\"btn btn-lg btn-block btn-info \" type=\"sumbit\" [disabled]=\"form.invalid\" >Submit</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { MusculeGroup } from '../enumerations/musculeGroup';\n\n@Component({\n  selector: 'workout-details',\n  templateUrl: './workout-details.component.html',\n  styleUrls: ['./workout-details.component.css']\n})\nexport class WorkoutDetailsComponent implements OnInit {\n  groups = MusculeGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h1 class=\"display-4 text-center\">New Workouts Register</h1>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <workout-detail></workout-detail>\n            <br>\n            <addexer-list></addexer-list>\n        </div>\n        <div class=\"col-md-7\">\n            <workout-list></workout-list>\n        </div>\n    </div>\n</div>\n","import { WorkoutDetailComponent } from './../workout-detail/workout-detail.component';\nimport { WorkoutDetailService } from 'src/app/shared/workout-detail.service';\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WorkoutDetail } from 'src/app/shared/models/workout-detail.model';\n\n@Component({\n  selector: 'app-workout-edit',\n  templateUrl: './workout-edit.component.html',\n  styleUrls: ['./workout-edit.component.css']\n})\nexport class WorkoutEditComponent implements OnInit {\n  @ViewChild(WorkoutDetailComponent)\n  private detailComponent: WorkoutDetailComponent;\n  id: number;\n  workout: WorkoutDetail;\n\n  constructor(private route: ActivatedRoute,\n    private service: WorkoutDetailService,\n    private ngZone: NgZone) {\n    route.params.subscribe(p =>\n      this.id = +p['id'])\n  }\n\n  ngOnInit(): void {\n    //this.ngZone.run(() => {\n      this.service.get(this.id).subscribe((res: WorkoutDetail) => {\n        this.workout = res;\n        this.detailComponent.PopulateForm(this.workout);\n      });\n    //})\n  }\n\n\n\n}\n","<div>\n    <h1 class=\"display-4 text-center\">Workout Edit {{id}}</h1>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <workout-detail></workout-detail>\n        </div>\n        <div class=\"col-md-7\">\n            <addexer-list></addexer-list>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WorkoutDetailService } from 'src/app/shared/workout-detail.service';\nimport { WorkoutDetail } from 'src/app/shared/models/workout-detail.model';\n\n@Component({\n  selector: 'workout-list',\n  templateUrl: './workout-list.component.html',\n  styleUrls: ['./workout-list.component.css']\n})\nexport class WorkoutListComponent implements OnInit {\n  list: WorkoutDetail[] = [];\n  constructor(private service: WorkoutDetailService) { }\n\n  ngOnInit(): void {\n    this.service.GetList().subscribe((res: WorkoutDetail[]) => this.list = res)\n    this.service.newWorkout.subscribe((res: WorkoutDetail) => { if (res.Title) this.list.push(res)})\n  }\n}\n","<div class=\"container-lg\">\n    <div class=\"row row-cols-1 row-cols-md-1 row-cols-lg-2\">\n        <div *ngFor=\"let w of list\" class=\"card col\" >\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{w.Title}}</h5>\n                <h6 class=\"card-subtitle mb-2 text-muted\">{{w.Date | date:'fullDate'}}</h6>\n                <a [routerLink]=\"['/workouts/', w.WorkoutId]\" class=\"card-link\">Open Workout</a>\n            </div>\n        </div>\n    </div>\n</div>","import { WorkoutDetail } from 'src/app/shared/models/workout-detail.model';\nimport { element } from 'protractor';\nimport { ExerciseDetailService } from 'src/app/shared/exercise-detail.service';\nimport { ExerciseDetail } from './../../shared/models/exercise-detail.model';\nimport * as _ from 'underscore';\nimport { WorkoutDetailService } from 'src/app/shared/workout-detail.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-workout-view',\n  templateUrl: './workout-view.component.html',\n  styleUrls: ['./workout-view.component.css']\n})\nexport class WorkoutViewComponent implements OnInit {\n  workout = { Title: \"Loading...\", Exercises: []}\n  exercises: ExerciseDetail[]\n  id: number;\n\n  constructor(private servise: WorkoutDetailService,\n    private exerciseServise: ExerciseDetailService,\n    route: ActivatedRoute,\n    private router: Router) { \n      route.params.subscribe(p => {\n        this.id = +p['id']\n        if(isNaN(this.id) || this.id <= 0)\n        router.navigate(['/workouts']);\n        return;\n      });\n    }\n\n    edit(){\n      this.router.navigate(['/workouts/edit/', this.id])\n    }\n    \n    ngOnInit(): void {\n      this.servise.get(this.id).subscribe((w: WorkoutDetail) =>{\n        this.workout = w;\n        this.workout.Exercises.sort(\n          (obj1, obj2) => {\n            if (obj1.Index > obj2.Index) {\n                return 1;\n            }\n        \n            if (obj1.Index < obj2.Index) {\n                return -1;\n            }\n        \n            return 0;\n        }\n        );\n        console.log(this.workout.Exercises)\n      });\n  }\n\n  delete(){\n    if (confirm(\"Are you sure?\"))\n    this.servise.delete(this.id)\n      .subscribe(x => {\n        this.router.navigate(['/workouts']);\n      })\n  }\n}\n","<h1 *ngIf=\"workout.Title\">{{workout.Title}} <i (click)=\"edit()\" style=\"font-size:35px;\" class=\"material-icons\">create</i></h1>\n<div *ngFor=\"let we of workout.Exercises; let i = index\">\n    <exercise-view [exercise]=\"we\" [index]=\"i\"></exercise-view>\n</div>\n<button class=\"btn btn-success\">Done</button>\n<button type=\"button\" [routerLink]=\"['/workouts']\" class=\"btn btn-light\">Back to list</button>\n<button class=\"btn btn-danger\" (click)=\"delete()\">Delete</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}